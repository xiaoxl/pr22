
## Data cleaning

### Handling Missing Data

- `np.nan`, `pd.NA`
- `pd.isnull()`, `np.isnan()`
- `dropna`, `fillna`


::: {#exm-}

```{python}
import pandas as pd
import numpy as np

data = pd.DataFrame([[1., 6.5, 3.], [1., np.nan, np.nan], 
                     [np.nan, np.nan, np.nan], [np.nan, 6.5, 3.]])
cleaned = data.dropna()
cleanedrow = data.dropna(how='all')

print(data)
print(cleaned)
print(cleanedrow)

data[4] = np.nan
cleaned1 = data.dropna(axis=1, how='all')
cleanedthresh = data.dropna(thresh=2)
print(data)
print(cleaned1)
print(cleanedthresh)

fill0 = data.fillna(0)
filldict = data.fillna({1: 0.5, 2: -0.1})
print(data)
print(fill0)
print(filldict)
```

:::


### Data Transformation

- `.duplicated()`, `drop_duplicates()`


::: {#exm-}

```{python}
import numpy as np
import pandas as pd

data = pd.DataFrame({'k1': ['one', 'two'] * 3 + ['two'], 
                     'k2': [1, 1, 2, 3, 3, 4, 4]})
data.drop_duplicates(['k1'], keep='last')
```
:::


- `pd.Series.map()`


::: {#exm-}

```{python}
import pandas as pd
import numpy as np

data = pd.DataFrame({'food': ['bacon', 'pulled pork', 'bacon',
                     'Pastrami', 'corned beef', 'Bacon',
                     'pastrami', 'honey ham', 'nova lox'],
                     'ounces': [4, 3, 12, 6, 7.5, 8, 3, 5, 6]})

meat_to_animal = {
    'bacon': 'pig',
    'pulled pork': 'pig',
    'pastrami': 'cow',
    'corned beef': 'cow',
    'honey ham': 'pig',
    'nova lox': 'salmon'
    }

data['animal'] = data['food'].str.lower().map(meat_to_animal)

data['food'].map(lambda x: meat_to_animal[x.lower()])
```

:::

- `replace`
- `rename`
<!-- - `pd.cut(ages, bins)` -->
- `describe`
- `permutation`
- `sample`
- dummy variables

### Example: Movies

Below we explore the MovieLens 1M datasets. You may download it from this [link](assests/datasets/movies.dat). 

```{python}
import pandas as pd
import numpy as np
mnames = ['movie_id', 'title', 'genres']
movies = pd.read_table('assests/datasets/movies.dat', sep='::',
                       header=None, names=mnames, engine="python",
                       encoding='ISO-8859-1')

all_genres = list()
movies['genres'].map(lambda x: all_genres.extend(x.split('|')))

genres = pd.unique(all_genres)

dummies = pd.DataFrame(np.zeros((len(movies), len(genres))), columns=genres)

for i, gen in enumerate(movies.genres):
    indices = dummies.columns.get_indexer(gen.split('|'))
    dummies.iloc[i, indices] = 1

movies_windic = movies.join(dummies.add_prefix('Genre_'))
```


### String Manipulation



::: {#thm-} 
fddsf

:::