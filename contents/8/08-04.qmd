## `ggplot2`




This is the graphing package for R in `tidyverse`. `ggplot2` implements the *grammar of graphics*, a coherent system for describing and building graphs. With `ggplot2`, you can do more faster by learning one system and applying it in many places. The main function is `ggplot()`.

`ggplot2` will be uploaded with `tidyverse`. 

```{r}
library(tidyverse)
```

We use the dataset `mpg` as the example. This dataset comes with `ggplot2`. Once you load `ggplot2` you can directly find the dataset by typing `mpg`.

```{r}
mpg
```

The syntax for `ggplot()` is 
```{r}
#| eval: false
ggplot(data = <DATA>) +
    <GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))
```

`ggplot(data=<DATA>)` create a plot without any geometric elements. It simply creates the canvas paired with the dataset.

Then you add one or more layers to `ggplot()` to complete the graph. The function `<GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))` adds a layer to the plot. You may add as many layers as you want. 

Each `geom` function takes a `mapping` argument. This defines how variables in the dataset are mapped to visual properties. `mapping` is always paired with `aes(x=, y=)`. This 

Here is a quick example.

```{r}
ggplot(data = mpg) +
    geom_point(mapping = aes(x = displ, y = hwy))
```


### Aesthetic mappings

An *aesthetic* is a visual property of the objects in your plot. It include things like the size, the shape or the color of the points. The variables set in `aes()` will change the aesthetic apperance of the geometric objects according to the variables. If the variables are set outside `aes()`, the apperance will be fixed. Please see the following examples.

Note that the variables in `aes()` other than `x` and `y` will automatically get legends.

```{r}
ggplot(data = mpg) +
    geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg) +
    geom_point(mapping = aes(x = displ, y = hwy, color = class))
```
